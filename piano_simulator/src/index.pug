#app
 
 .audioplayer(v-for='s in sounddata')
  //- label {{s.number}}
  audio(v-bind:data-num='s.number')
    source(v-bind:src="s.url" type="audio/ogg")
 .center_box
   h2 Piano Simulator 
   .keyboard
      .pianokey(v-for = 's in display_keys')
        .white(v-if = 's.type==\"white\"' 
               v-on:click = 'addnote(s.num)'
               v-bind:class = '[(playing_time&&get_current_highlight(s.num) )||(now_press_key==s.key)?\"playing\":\"\"]')
          .label {{String.fromCharCode(s.key)}}
        
        .black(v-if = 's.type==\"black\"' 
               v-on:click = 'addnote(s.num)'  
               v-bind:class ='[(playing_time&&get_current_highlight(s.num)||now_press_key==s.key)?\"playing\":\"\"]')
          .label {{String.fromCharCode(s.key)}}
      
      
   br  
   .controls
     ul.notes_list(v-if="notes.length>0")
      li(v-for='(note,id) in notes'
         v-bind:class='now_note_id-1==id?\"playing\":\"\"')
        .num {{note.num}}
        .time {{note.time}}
     button(v-on:click='load_sample') Sample
     button(v-on:click="playnext(1)") Playnext
     button(v-if='playing_time<=0'
            v-on:click="startplay") StartPlay
          i.fa.fa-play
     button(v-if='playing_time>=1'
            v-on:click="stopplay") Stopplay
          i.fa.fa-pause
     button(v-if='record_time<=0'
            v-on:click="start_record") Record
          i.fa.fa-circle
     button(v-if='record_time>=1'
            v-on:click="stop_record") StopRecord
           i.fa.fa-stop
     button(v-on:click="notes=[]") Clear
     h4 {{playing_time+record_time}}